<div class="container py-5">
  <nav aria-label="breadcrumb">
    <ol class="breadcrumb">
      <li class="breadcrumb-item"><a href="/products">Productos</a></li>
      <li class="breadcrumb-item active">{{product.title}}</li>
    </ol>
  </nav>

  <div class="row">
    <div class="col-md-6">
      {{#if product.thumbnails.length}}
        <div id="productCarousel" class="carousel slide" data-bs-ride="carousel">
          <div class="carousel-inner">
            {{#each product.thumbnails}}
            <div class="carousel-item {{#if @first}}active{{/if}}">
              <img src="{{this}}" class="d-block w-100" alt="{{../product.title}}">
            </div>
            {{/each}}
          </div>
          {{#if (gt product.thumbnails.length 1)}}
          <button class="carousel-control-prev" type="button" data-bs-target="#productCarousel" data-bs-slide="prev">
            <span class="carousel-control-prev-icon"></span>
          </button>
          <button class="carousel-control-next" type="button" data-bs-target="#productCarousel" data-bs-slide="next">
            <span class="carousel-control-next-icon"></span>
          </button>
          {{/if}}
        </div>
      {{else}}
        <div class="card bg-light d-flex align-items-center justify-content-center" style="height: 400px;">
          <i class="bi bi-image text-muted" style="font-size: 4rem;"></i>
          <p class="text-muted mt-2">Sin imagen</p>
        </div>
      {{/if}}
    </div>

    <div class="col-md-6">
      <h1 class="mb-3">{{product.title}}</h1>
      
      <div class="mb-3">
        <span class="h2 text-primary">${{product.price}}</span>
      </div>

      <p class="lead mb-4">{{product.description}}</p>

      <div class="row mb-4">
        <div class="col-6">
          <h6 class="text-muted">Categoría</h6>
          <span class="badge bg-secondary fs-6">{{product.category}}</span>
        </div>
        <div class="col-6">
          <h6 class="text-muted">Código</h6>
          <span class="badge bg-warning text-dark fs-6">{{product.code}}</span>
        </div>
      </div>

      <div class="row mb-4">
        <div class="col-6">
          <h6 class="text-muted">Stock disponible</h6>
          <span class="badge bg-info text-dark fs-6">{{product.stock}} unidades</span>
        </div>
        <div class="col-6">
          <h6 class="text-muted">Estado</h6>
          {{#if product.status}}
            <span class="badge bg-success fs-6">Disponible</span>
          {{else}}
            <span class="badge bg-danger fs-6">No disponible</span>
          {{/if}}
        </div>
      </div>

      {{#if product.status}}
        {{#if (gt product.stock 0)}}
          <div class="mb-4">
            <label for="quantity" class="form-label">Cantidad</label>
            <div class="input-group" style="max-width: 150px;">
              <button class="btn btn-outline-secondary" type="button" onclick="decreaseQuantity()">-</button>
              <input type="number" class="form-control text-center" id="quantity" value="1" min="1" max="{{product.stock}}">
              <button class="btn btn-outline-secondary" type="button" onclick="increaseQuantity()">+</button>
            </div>
          </div>

          <div class="d-grid gap-2 d-md-flex">
            <button class="btn btn-success btn-lg me-md-2" onclick="addToCart('{{product._id}}')">
              <i class="bi bi-cart-plus"></i> Agregar al carrito
            </button>
            <button class="btn btn-outline-primary btn-lg">
              <i class="bi bi-heart"></i> Favoritos
            </button>
          </div>
        {{else}}
          <div class="alert alert-warning">
            <i class="bi bi-exclamation-triangle"></i> Producto sin stock
          </div>
        {{/if}}
      {{else}}
        <div class="alert alert-danger">
          <i class="bi bi-x-circle"></i> Producto no disponible
        </div>
      {{/if}}
    </div>
  </div>

  <!-- Productos relacionados -->
  <div class="row mt-5">
    <div class="col-12">
      <h3 class="mb-4">Productos relacionados</h3>
      <p class="text-muted">Otros productos de la categoría "{{product.category}}"</p>
      
    </div>
  </div>
</div>

<script>
function increaseQuantity() {
  const input = document.getElementById('quantity');
  const max = parseInt(input.max);
  const current = parseInt(input.value);
  if (current < max) {
    input.value = current + 1;
  }
}

function decreaseQuantity() {
  const input = document.getElementById('quantity');
  const min = parseInt(input.min);
  const current = parseInt(input.value);
  if (current > min) {
    input.value = current - 1;
  }
}

function addToCart(productId) {
  const quantity = document.getElementById('quantity').value;
  addProductToCart(productId, quantity);
}

async function addProductToCart(productId, quantity = 1) {
  try {
    // Obtener o crear carrito
    const cartId = await getOrCreateCart();
    if (!cartId) {
      showNotification('Error al crear carrito', 'danger');
      return;
    }
    
    // Agregar producto al carrito
    const response = await fetch(`/api/carts/${cartId}/products/${productId}`, {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json'
      },
      body: JSON.stringify({ quantity: parseInt(quantity) })
    });
    
    if (response.ok) {
      const result = await response.json();
      showNotification(`¡${quantity} unidad(es) agregada(s) al carrito!`, 'success');
      
      // Efecto visual en el botón
      const button = document.querySelector('button[onclick*="addToCart"]');
      if (button) {
        const originalText = button.innerHTML;
        button.innerHTML = '<i class="bi bi-check"></i> ¡Agregado!';
        button.classList.add('btn-outline-success');
        setTimeout(() => {
          button.innerHTML = originalText;
          button.classList.remove('btn-outline-success');
        }, 2000);
      }
    } else {
      showNotification('Error agregando producto al carrito', 'danger');
    }
  } catch (error) {
    console.error('Error:', error);
    showNotification('Error de conexión', 'danger');
  }
}

async function getOrCreateCart() {
  try {
    // Usar carrito por defecto para simplicidad de entrega
    const defaultCartId = '687dac974264b0fa9e14dba6';
    
    // Verificar si el carrito existe
    const checkResponse = await fetch(`/api/carts/${defaultCartId}`);
    if (checkResponse.ok) {
      return defaultCartId;
    }
    
    // Si no existe, crear uno nuevo (aunque deberíamos tener uno predefinido)
    const response = await fetch('/api/carts', {
      method: 'POST'
    });
    
    if (response.ok) {
      const newCart = await response.json();
      return newCart._id;
    }
    
    return null;
  } catch (error) {
    console.error('Error obteniendo carrito:', error);
    return null;
  }
}

// Función para mostrar notificaciones
function showNotification(message, type = 'info') {
  const notification = document.createElement('div');
  notification.className = `alert alert-${type} position-fixed`;
  notification.style.cssText = `
    top: 20px;
    right: 20px;
    z-index: 9999;
    min-width: 300px;
    box-shadow: 0 4px 12px rgba(0,0,0,0.15);
  `;
  notification.innerHTML = `
    <div class="d-flex align-items-center">
      <i class="bi bi-${type === 'success' ? 'check-circle' : type === 'danger' ? 'exclamation-triangle' : 'info-circle'} me-2"></i>
      ${message}
    </div>
  `;
  
  document.body.appendChild(notification);
  
  setTimeout(() => {
    if (notification.parentNode) {
      notification.remove();
    }
  }, 3000);
}
</script>

<!-- Bootstrap Icons -->
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.3/font/bootstrap-icons.min.css">
