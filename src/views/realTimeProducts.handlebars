<div class="container-fluid py-4">
  <!-- Header del panel de administración -->
  <div class="row mb-4">
    <div class="col-12">
      <div class="d-flex justify-content-between align-items-center">
        <div>
          <h1 class="h3 mb-1">⚡ Administración en Tiempo Real</h1>
          <p class="text-muted mb-0">Gestiona tu inventario en vivo - <span id="product-count">{{products.length}}</span> productos</p>
        </div>
        <div class="d-flex gap-2">
          <!-- Filtro por categoría -->
          <div class="dropdown">
            <button class="btn btn-outline-secondary dropdown-toggle" type="button" id="categoryFilter" onclick="toggleDropdown()" aria-expanded="false">
              <i class="bi bi-funnel"></i> <span id="current-category">Todas las categorías</span>
              <span id="update-indicator" class="badge bg-warning ms-1" style="display: none;">!</span>
            </button>
            <ul class="dropdown-menu" id="category-list">
              <li><a class="dropdown-item" href="#" onclick="filterByCategory('all'); return false;">Todas las categorías</a></li>
              <!-- Las categorías se llenarán dinámicamente -->
            </ul>
          </div>
          
          <div class="btn-group" role="group">
            <a href="/" class="btn btn-outline-primary">
              <i class="bi bi-house"></i> Inicio
            </a>
            <a href="/products" class="btn btn-outline-success">
              <i class="bi bi-cart"></i> Tienda
            </a>
          </div>
        </div>
      </div>
    </div>
  </div>

  <!-- Formulario de nuevo producto -->
  <div class="row mb-4">
    <div class="col-12">
      <div class="card shadow-sm border-0">
        <div class="card-header bg-gradient" style="background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);">
          <h5 class="text-white mb-0">
            <i class="bi bi-plus-circle"></i> Agregar Nuevo Producto
          </h5>
        </div>
        <div class="card-body">
          <form id="product-form" class="row g-3">
            <div class="col-md-6">
              <label class="form-label fw-bold">
                <i class="bi bi-card-text"></i> Título del Producto
              </label>
              <input type="text" name="title" placeholder="Ingresa el nombre del producto" required class="form-control" />
            </div>
            <div class="col-md-6">
              <label class="form-label fw-bold">
                <i class="bi bi-file-text"></i> Descripción
              </label>
              <input type="text" name="description" placeholder="Describe las características" required class="form-control" />
            </div>
            <div class="col-md-3">
              <label class="form-label fw-bold">
                <i class="bi bi-currency-dollar"></i> Precio
              </label>
              <input type="number" name="price" placeholder="0.00" required class="form-control" />
            </div>
            <div class="col-md-3">
              <label class="form-label fw-bold">
                <i class="bi bi-upc-scan"></i> Código
              </label>
              <input type="text" name="code" placeholder="SKU-001" required class="form-control" />
            </div>
            <div class="col-md-3">
              <label class="form-label fw-bold">
                <i class="bi bi-box-seam"></i> Stock
              </label>
              <input type="number" name="stock" placeholder="0" required class="form-control" />
            </div>
            <div class="col-md-3">
              <label class="form-label fw-bold">
                <i class="bi bi-tag"></i> Categoría
              </label>
              <input type="text" name="category" placeholder="Electrónicos" required class="form-control" />
            </div>
            <div class="col-12 text-end">
              <button type="submit" class="btn btn-success btn-lg">
                <i class="bi bi-plus-lg"></i> Agregar Producto
              </button>
            </div>
          </form>
        </div>
      </div>
    </div>
  </div>

  <!-- Lista de productos administrables -->
  <div class="row">
    <div class="col-12">
      <div class="card shadow-sm border-0">
        <div class="card-header bg-light">
          <div class="d-flex justify-content-between align-items-center">
            <h5 class="mb-0">
              <i class="bi bi-database"></i> Inventario Actual
            </h5>
            <span class="badge bg-primary fs-6">{{products.length}} productos</span>
          </div>
        </div>
        <div class="card-body p-0">
          <div id="product-list" class="list-group list-group-flush">
            {{#each products}}
            <div class="list-group-item border-0" data-product-id="{{this.id}}">
              <div class="row align-items-center py-2">
                <!-- Información básica -->
                <div class="col-md-5">
                  <div class="d-flex align-items-center">
                    <div class="product-icon me-3">
                      <div class="bg-primary rounded-circle d-flex align-items-center justify-content-center" 
                           style="width: 50px; height: 50px;">
                        <i class="bi bi-box text-white fs-5"></i>
                      </div>
                    </div>
                    <div>
                      <h6 class="mb-1 fw-bold">{{this.title}}</h6>
                      <p class="mb-1 text-muted small">{{this.description}}</p>
                      <div class="meta-info">
                        <span class="badge bg-light text-dark border me-1">
                          <i class="bi bi-upc-scan"></i> {{this.code}}
                        </span>
                        <span class="badge bg-info text-white">
                          <i class="bi bi-tag"></i> {{this.category}}
                        </span>
                      </div>
                    </div>
                  </div>
                </div>
                
                <!-- Precio -->
                <div class="col-md-2 text-center">
                  <div class="price-display">
                    <div class="fs-4 fw-bold text-success">${{this.price}}</div>
                    <small class="text-muted">Precio unitario</small>
                  </div>
                </div>
                
                <!-- Stock -->
                <div class="col-md-2 text-center">
                  {{#if (gt this.stock 20)}}
                    <span class="badge bg-success p-2">
                      <i class="bi bi-check-circle"></i> {{this.stock}} unidades
                    </span>
                  {{else if (gt this.stock 5)}}
                    <span class="badge bg-warning text-dark p-2">
                      <i class="bi bi-exclamation-triangle"></i> {{this.stock}} unidades
                    </span>
                  {{else if (gt this.stock 0)}}
                    <span class="badge bg-danger p-2">
                      <i class="bi bi-exclamation-circle"></i> {{this.stock}} unidades
                    </span>
                  {{else}}
                    <span class="badge bg-secondary p-2">
                      <i class="bi bi-x-circle"></i> Sin stock
                    </span>
                  {{/if}}
                </div>
                
                <!-- Estado y acciones -->
                <div class="col-md-3">
                  <div class="d-flex justify-content-between align-items-center">
                    <div class="product-status">
                      {{#if this.status}}
                        <span class="badge bg-success">
                          <i class="bi bi-check-circle"></i> Disponible
                        </span>
                      {{else}}
                        <span class="badge bg-danger">
                          <i class="bi bi-pause-circle"></i> No disponible
                        </span>
                      {{/if}}
                    </div>
                    <div class="action-buttons">
                      <button onclick="deleteProduct('{{this.id}}')" class="btn btn-outline-danger btn-sm">
                        <i class="bi bi-trash"></i> Eliminar
                      </button>
                    </div>
                  </div>
                </div>
              </div>
            </div>
            {{/each}}
          </div>
        </div>
      </div>
    </div>
  </div>
</div>

<!-- Scripts para funcionalidad adicional -->
<script>
// Variables globales para filtrado (solo las no duplicadas)
let currentFilter = 'all';

function deleteProduct(productId) {
  if (confirm('¿Estás seguro de que quieres eliminar este producto?')) {
    // La función de eliminación ya existe en socket-client.js
  }
}

// Función para actualizar el contador de productos
function updateProductCount() {
  const count = filteredProducts.length;
  
  document.getElementById('product-count').textContent = count;
  
  // Actualizar badge en el header del inventario
  const inventoryBadge = document.querySelector('.card-header .badge');
  if (inventoryBadge) {
    inventoryBadge.textContent = `${count} productos`;
  }
}

// Función para extraer categorías únicas y llenar el dropdown
function populateCategoryDropdown() {
  const categoryDropdown = document.getElementById('category-list');
  const categories = new Set();
  
  // Extraer categorías de todos los productos
  totalProducts.forEach(product => {
    if (product.category) {
      categories.add(product.category);
    }
  });
  
  // Limpiar dropdown actual (excepto "Todas las categorías")
  const existingItems = categoryDropdown.querySelectorAll('li:not(:first-child)');
  existingItems.forEach(item => item.remove());
  
  // Agregar categorías al dropdown
  categories.forEach(category => {
    const li = document.createElement('li');
    li.innerHTML = `<a class="dropdown-item" href="#" onclick="filterByCategory('${category}'); return false;">${category}</a>`;
    categoryDropdown.appendChild(li);
  });
}

// Inicializar cuando la página carga
document.addEventListener('DOMContentLoaded', function() {
  // Event listener para el formulario de agregar producto
  const productForm = document.getElementById('product-form');
  if (productForm) {
    productForm.addEventListener('submit', function(e) {
      e.preventDefault();
      
      // Obtener datos del formulario
      const formData = new FormData(productForm);
      const productData = {
        title: formData.get('title'),
        description: formData.get('description'),
        price: parseFloat(formData.get('price')),
        code: formData.get('code'),
        stock: parseInt(formData.get('stock')),
        category: formData.get('category'),
        status: true // Por defecto los productos están disponibles
      };
      
      // Validar datos
      if (!productData.title || !productData.description || !productData.price || 
          !productData.code || productData.stock < 0 || !productData.category) {
        alert('Por favor, completa todos los campos correctamente.');
        return;
      }
      
      // Enviar producto via Socket.IO
      socket.emit('newProduct', productData);
      
      // Limpiar formulario
      productForm.reset();
      
      // Mostrar mensaje de confirmación
      showNotification('Producto agregado correctamente', 'success');
    });
  }
  
  // Event listener manual para el dropdown
  const dropdownButton = document.getElementById('categoryFilter');
  const dropdownMenu = document.getElementById('category-list');
  
  if (dropdownButton && dropdownMenu) {
    // Cerrar dropdown al hacer click fuera
    document.addEventListener('click', function(e) {
      if (!dropdownButton.contains(e.target) && !dropdownMenu.contains(e.target)) {
        dropdownMenu.classList.remove('show');
      }
    });
    
    // Cerrar dropdown con tecla Escape
    document.addEventListener('keydown', function(e) {
      if (e.key === 'Escape') {
        dropdownMenu.classList.remove('show');
      }
    });
  }
  
  populateCategoryDropdown();
  updateProductCount();
});

// Variable para controlar si se deben procesar actualizaciones
let allowUpdates = true;

// Actualizar cuando llegan nuevos productos via Socket.IO
if (typeof socket !== 'undefined') {
  socket.on('updateProducts', function(products) {
    // Solo actualizar si está permitido
    if (!allowUpdates) {
      return; // No hacer nada si las actualizaciones están deshabilitadas
    }
    
    totalProducts = products;
    
    // Si no hay filtro activo, actualizar normalmente
    if (currentFilter === 'all') {
      filteredProducts = products;
      populateCategoryDropdown();
      currentPage = 1;
      renderProductsPage();
    } else {
      // Si hay filtro activo, NO hacer nada para evitar el parpadeo
      // Solo mostrar indicador sin tocar el DOM
      const updateIndicator = document.getElementById('update-indicator');
      if (updateIndicator) {
        updateIndicator.style.display = 'inline-block';
        updateIndicator.title = 'Hay nuevos datos disponibles. Cambia el filtro para actualizar.';
      }
    }
  });
}
</script>

<!-- Estilos adicionales -->
<style>
/* Estilos para dropdown manual */
.dropdown {
  position: relative;
}

.dropdown-menu {
  position: absolute;
  top: 100%;
  left: 0;
  z-index: 1000;
  display: none;
  min-width: 200px;
  padding: 0.5rem 0;
  margin: 0.125rem 0 0;
  font-size: 1rem;
  color: #212529;
  text-align: left;
  background-color: #fff;
  background-clip: padding-box;
  border: 1px solid rgba(0,0,0,.15);
  border-radius: 0.375rem;
  box-shadow: 0 0.5rem 1rem rgba(0,0,0,.175);
}

.dropdown-menu.show {
  display: block;
}

.dropdown-item {
  display: block;
  width: 100%;
  padding: 0.375rem 1rem;
  clear: both;
  font-weight: 400;
  color: #212529;
  text-align: inherit;
  text-decoration: none;
  white-space: nowrap;
  background-color: transparent;
  border: 0;
}

.dropdown-item:hover {
  color: #1e2125;
  background-color: #e9ecef;
}

.list-group-item {
  /* Eliminado transition y hover para evitar efectos visuales problemáticos */
}

.product-icon {
  /* Eliminado transition y hover para evitar efectos visuales problemáticos */
}

.price-display {
  font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
}

.action-buttons button {
  /* Eliminado transition y hover para evitar efectos visuales problemáticos */
}

.card-header.bg-gradient {
  border: none;
}

.form-control:focus {
  border-color: #667eea;
  box-shadow: 0 0 0 0.2rem rgba(102, 126, 234, 0.25);
}

@media (max-width: 768px) {
  .col-md-3, .col-md-2 {
    margin-top: 1rem;
  }
  
  .action-buttons {
    display: flex;
    gap: 0.5rem;
  }
}
</style>

<!-- Bootstrap Icons (opcional para el ícono de eliminar) -->
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.3/font/bootstrap-icons.min.css">
<script src="/socket.io/socket.io.js"></script>
<script src="/js/socket-client.js"></script>