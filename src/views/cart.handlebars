<div class="container-fluid py-4">
  <!-- Header del carrito -->
  <div class="row mb-4">
    <div class="col-12">
      <div class="bg-gradient rounded p-4 text-white mb-3" style="background: linear-gradient(135deg, #28a745 0%, #20c997 100%);">
        <div class="d-flex justify-content-between align-items-center">
          <div>
            <h1 class="h2 mb-1">üõí Mi Carrito de Compras</h1>
            <p class="mb-0 opacity-75">Revisa tus productos antes de finalizar la compra</p>
          </div>
          <div class="d-flex gap-2">
            <a href="/products" class="btn btn-light btn-lg">
              <i class="bi bi-arrow-left"></i> Seguir Comprando
            </a>
            <a href="/" class="btn btn-outline-light">
              <i class="bi bi-house"></i> Inicio
            </a>
          </div>
        </div>
      </div>
    </div>
  </div>

  {{#if cart.products.length}}
    <div class="row">
      <!-- Lista de productos en el carrito -->
      <div class="col-lg-8">
        <div class="card shadow-sm border-0 mb-4">
          <div class="card-header bg-white border-bottom">
            <h5 class="mb-0">
              <i class="bi bi-bag"></i> Productos en tu Carrito
              <span class="badge bg-primary ms-2">{{cart.products.length}} art√≠culos</span>
            </h5>
          </div>
          <div class="card-body p-0">
            <div class="list-group list-group-flush">
              {{#each cart.products}}
              <div class="list-group-item border-0 cart-item" data-product-id="{{this.product._id}}">
                <div class="row align-items-center py-3">
                  <!-- Imagen del producto -->
                  <div class="col-md-2 col-3">
                    <div class="product-image-container">
                      {{#if this.product.thumbnails}}
                        <img src="{{this.product.thumbnails}}" 
                             class="img-fluid rounded border shadow-sm" 
                             style="width: 80px; height: 80px; object-fit: cover;"
                             alt="{{this.product.title}}">
                      {{else}}
                        <div class="bg-light border rounded d-flex align-items-center justify-content-center shadow-sm" 
                             style="width: 80px; height: 80px;">
                          <i class="bi bi-image text-muted fs-4"></i>
                        </div>
                      {{/if}}
                    </div>
                  </div>
                  
                  <!-- Informaci√≥n del producto -->
                  <div class="col-md-4 col-9">
                    <div class="product-info">
                      <h6 class="product-title mb-1 fw-bold">{{this.product.title}}</h6>
                      <p class="product-description text-muted mb-2 small">{{this.product.description}}</p>
                      <div class="product-meta">
                        <span class="badge bg-light text-dark border me-1">
                          <i class="bi bi-upc-scan"></i> {{this.product.code}}
                        </span>
                        <span class="badge bg-info text-white">
                          <i class="bi bi-tag"></i> {{this.product.category}}
                        </span>
                      </div>
                    </div>
                  </div>
                  
                  <!-- Precio unitario -->
                  <div class="col-md-2 text-center">
                    <div class="price-info">
                      <div class="unit-price text-muted small">Precio unitario</div>
                      <div class="price fs-5 fw-bold text-success">${{this.product.price}}</div>
                    </div>
                  </div>
                  
                  <!-- Controles de cantidad -->
                  <div class="col-md-2 text-center">
                    <div class="quantity-controls">
                      <label class="small text-muted mb-1 d-block">Cantidad</label>
                      <div class="input-group input-group-sm">
                        <button class="btn btn-outline-secondary" 
                                onclick="updateQuantity('{{../cartId}}', '{{this.product._id}}', {{this.quantity}}, -1)"
                                {{#if (eq this.quantity 1)}}disabled{{/if}}>
                          <i class="bi bi-dash"></i>
                        </button>
                        <input type="text" class="form-control text-center fw-bold" value="{{this.quantity}}" readonly>
                        <button class="btn btn-outline-secondary" 
                                onclick="updateQuantity('{{../cartId}}', '{{this.product._id}}', {{this.quantity}}, 1)">
                          <i class="bi bi-plus"></i>
                        </button>
                      </div>
                    </div>
                  </div>
                  
                  <!-- Subtotal y acciones -->
                  <div class="col-md-2 text-center">
                    <div class="subtotal-section">
                      <div class="subtotal-label text-muted small mb-1">Subtotal</div>
                      <div class="subtotal-price fs-4 fw-bold text-primary">
                        $<span class="subtotal-value" data-price="{{this.product.price}}" data-quantity="{{this.quantity}}">{{this.product.price}}</span>
                      </div>
                      <button class="btn btn-outline-danger btn-sm mt-2" 
                              onclick="removeFromCart('{{../cartId}}', '{{this.product._id}}')"
                              title="Eliminar producto"
                              data-debug-cart-id="{{../cartId}}"
                              data-debug-product-id="{{this.product._id}}"
                              data-debug-product-title="{{this.product.title}}">
                        <i class="bi bi-trash"></i> Quitar
                      </button>
                    </div>
                  </div>
                </div>
              </div>
              {{/each}}
            </div>
          </div>
        </div>
      </div>

      <!-- Resumen del pedido -->
      <div class="col-lg-4">
        <div class="card shadow-sm border-0 sticky-top" style="top: 20px;">
          <div class="card-header bg-gradient text-white" style="background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);">
            <h5 class="mb-0">
              <i class="bi bi-calculator"></i> Resumen del Pedido
            </h5>
          </div>
          <div class="card-body">
            <!-- Desglose de precios -->
            <div class="order-summary">
              <div class="d-flex justify-content-between py-2 border-bottom">
                <span class="text-muted">Productos ({{cart.products.length}}):</span>
                <span class="fw-bold">${{calculateSubtotal cart.products}}</span>
              </div>
              
              <div class="d-flex justify-content-between py-2 border-bottom">
                <span class="text-muted">
                  <i class="bi bi-truck"></i> Env√≠o:
                </span>
                <span class="text-success fw-bold">GRATIS</span>
              </div>
              
              <div class="d-flex justify-content-between py-2 border-bottom">
                <span class="text-muted">
                  <i class="bi bi-percent"></i> Descuentos:
                </span>
                <span class="text-muted">$0.00</span>
              </div>
              
              <div class="d-flex justify-content-between py-3 bg-light rounded mt-3 px-3">
                <span class="h5 mb-0">
                  <i class="bi bi-currency-dollar"></i> Total:
                </span>
                <span class="h4 mb-0 text-success fw-bold" id="total">
                  ${{calculateSubtotal cart.products}}
                </span>
              </div>
            </div>

            <!-- Informaci√≥n adicional -->
            <div class="additional-info mt-3">
              <div class="alert alert-info border-0" role="alert">
                <i class="bi bi-info-circle"></i>
                <strong>Env√≠o gratis</strong> en compras superiores a $50
              </div>
              
              <div class="benefits mb-3">
                <div class="benefit-item d-flex align-items-center mb-2">
                  <i class="bi bi-shield-check text-success me-2"></i>
                  <small>Compra 100% segura</small>
                </div>
                <div class="benefit-item d-flex align-items-center mb-2">
                  <i class="bi bi-arrow-return-left text-info me-2"></i>
                  <small>Devoluciones gratis</small>
                </div>
                <div class="benefit-item d-flex align-items-center">
                  <i class="bi bi-headset text-warning me-2"></i>
                  <small>Soporte 24/7</small>
                </div>
              </div>
            </div>

            <!-- Botones de acci√≥n -->
            <div class="action-buttons d-grid gap-2 mt-4">
              <form action="/cart/checkout" method="POST" onsubmit="return confirmPurchase()">
                <button type="submit" class="btn btn-success btn-lg w-100 mb-2">
                  <i class="bi bi-credit-card"></i> Finalizar Compra
                </button>
              </form>
              
              <button class="btn btn-outline-primary w-100 mb-2" onclick="saveForLater()">
                <i class="bi bi-heart"></i> Guardar para despu√©s
              </button>
              
              <button class="btn btn-outline-danger w-100" onclick="clearCart('{{cartId}}')">
                <i class="bi bi-trash"></i> Vaciar Carrito
              </button>
            </div>
          </div>
        </div>

        <!-- Productos recomendados -->
        <div class="card shadow-sm border-0 mt-4">
          <div class="card-header bg-light">
            <h6 class="mb-0">
              <i class="bi bi-lightbulb"></i> Te podr√≠a interesar
            </h6>
          </div>
          <div class="card-body">
            <div class="recommendation-item d-flex align-items-center mb-3">
              <div class="rec-image me-3">
                <div class="bg-primary rounded d-flex align-items-center justify-content-center" 
                     style="width: 40px; height: 40px;">
                  <i class="bi bi-gift text-white"></i>
                </div>
              </div>
              <div class="flex-grow-1">
                <small class="fw-bold">Producto destacado</small>
                <div class="small text-muted">Solo por $29.99</div>
              </div>
              <button class="btn btn-outline-primary btn-sm">Ver</button>
            </div>
          </div>
        </div>
      </div>
    </div>
  {{else}}
    <!-- Carrito vac√≠o -->
    <div class="row justify-content-center">
      <div class="col-md-6">
        <div class="card shadow-sm border-0 text-center">
          <div class="card-body py-5">
            <div class="empty-cart-icon mb-4">
              <i class="bi bi-cart-x text-muted" style="font-size: 5rem;"></i>
            </div>
            <h3 class="mb-3 text-muted">Tu carrito est√° vac√≠o</h3>
            <p class="text-muted mb-4">
              Parece que a√∫n no has agregado ning√∫n producto a tu carrito.
              ¬°Explora nuestro cat√°logo y encuentra productos incre√≠bles!
            </p>
            <div class="d-grid gap-2 d-md-flex justify-content-md-center">
              <a href="/products" class="btn btn-primary btn-lg">
                <i class="bi bi-shop"></i> Explorar Productos
              </a>
              <a href="/" class="btn btn-outline-secondary btn-lg">
                <i class="bi bi-house"></i> Ir al Inicio
              </a>
            </div>
          </div>
        </div>
      </div>
    </div>
  {{/if}}
</div>

<script>
async function updateQuantity(cartId, productId, currentQuantity, change) {
  const newQuantity = currentQuantity + change;
  
  if (newQuantity <= 0) {
    removeFromCart(cartId, productId);
    return;
  }

  try {
    // Mostrar indicador de carga
    showLoadingIndicator();
    
    const response = await fetch(`/api/carts/${cartId}/products/${productId}`, {
      method: 'PUT',
      headers: {
        'Content-Type': 'application/json'
      },
      body: JSON.stringify({ quantity: newQuantity })
    });

    if (response.ok) {
      showNotification('Cantidad actualizada', 'success');
      setTimeout(() => location.reload(), 1000);
    } else {
      showNotification('Error actualizando cantidad', 'danger');
    }
  } catch (error) {
    showNotification('Error de conexi√≥n', 'danger');
  } finally {
    hideLoadingIndicator();
  }
}

async function removeFromCart(cartId, productId) {
  console.log('DEBUG removeFromCart - cartId:', cartId, 'productId:', productId);
  
  if (!productId || productId === 'undefined' || productId.trim() === '') {
    showNotification('Error: ID de producto no v√°lido', 'danger');
    return;
  }
  
  if (!confirm('¬øEst√°s seguro de eliminar este producto del carrito?')) return;

  try {
    showLoadingIndicator();
    
    const response = await fetch(`/api/carts/${cartId}/products/${productId}`, {
      method: 'DELETE'
    });

    if (response.ok) {
      showNotification('Producto eliminado del carrito', 'success');
      setTimeout(() => location.reload(), 1000);
    } else {
      showNotification('Error eliminando producto', 'danger');
    }
  } catch (error) {
    showNotification('Error de conexi√≥n', 'danger');
  } finally {
    hideLoadingIndicator();
  }
}

async function clearCart(cartId) {
  if (!confirm('¬øEst√°s seguro de vaciar todo el carrito?\n\nEsta acci√≥n no se puede deshacer.')) return;

  try {
    showLoadingIndicator();
    
    const response = await fetch(`/api/carts/${cartId}`, {
      method: 'DELETE'
    });

    if (response.ok) {
      showNotification('Carrito vaciado exitosamente', 'success');
      setTimeout(() => location.reload(), 1000);
    } else {
      showNotification('Error vaciando carrito', 'danger');
    }
  } catch (error) {
    showNotification('Error de conexi√≥n', 'danger');
  } finally {
    hideLoadingIndicator();
  }
}

function saveForLater() {
  showNotification('Carrito guardado en favoritos', 'info');
}

function confirmPurchase() {
  const total = document.getElementById('total').textContent;
  const confirmMsg = `üõí CONFIRMAR COMPRA üõí\n\n` +
                    `Total a pagar: ${total}\n\n` +
                    `‚úÖ Se procesar√° el pago\n` +
                    `‚úÖ Se vaciar√° tu carrito\n` +
                    `‚úÖ Recibir√°s confirmaci√≥n por email\n\n` +
                    `¬øProceder con la compra?`;
  return confirm(confirmMsg);
}

// Mostrar notificaciones
function showNotification(message, type) {
  const notification = document.createElement('div');
  notification.className = `alert alert-${type} alert-dismissible fade show position-fixed`;
  notification.style.cssText = `
    top: 20px;
    right: 20px;
    z-index: 1050;
    min-width: 300px;
    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);
    border: none;
    border-radius: 10px;
  `;
  
  const icons = {
    success: '‚úÖ',
    danger: '‚ùå',
    warning: '‚ö†Ô∏è',
    info: '‚ÑπÔ∏è'
  };
  
  notification.innerHTML = `
    <div class="d-flex align-items-center">
      <span class="me-2" style="font-size: 1.2rem;">${icons[type]}</span>
      <strong>${message}</strong>
    </div>
    <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
  `;
  
  document.body.appendChild(notification);
  
  setTimeout(() => {
    if (notification.parentNode) {
      notification.remove();
    }
  }, 3000);
}

// Indicadores de carga
function showLoadingIndicator() {
  const loader = document.createElement('div');
  loader.id = 'loading-indicator';
  loader.innerHTML = `
    <div class="position-fixed top-50 start-50 translate-middle" style="z-index: 9999;">
      <div class="spinner-border text-primary" role="status">
        <span class="visually-hidden">Cargando...</span>
      </div>
    </div>
  `;
  document.body.appendChild(loader);
}

function hideLoadingIndicator() {
  const loader = document.getElementById('loading-indicator');
  if (loader) {
    loader.remove();
  }
}

// Efectos y animaciones
document.addEventListener('DOMContentLoaded', function() {
  // Animaciones de hover para los productos
  const cartItems = document.querySelectorAll('.cart-item');
  cartItems.forEach(item => {
    item.addEventListener('mouseenter', function() {
      this.style.transform = 'translateX(5px)';
      this.style.backgroundColor = '#f8f9fa';
    });
    
    item.addEventListener('mouseleave', function() {
      this.style.transform = 'translateX(0)';
      this.style.backgroundColor = '';
    });
  });
  
  // Efectos en botones de cantidad
  const quantityButtons = document.querySelectorAll('.input-group button');
  quantityButtons.forEach(button => {
    button.addEventListener('click', function() {
      this.style.transform = 'scale(0.95)';
      setTimeout(() => {
        this.style.transform = 'scale(1)';
      }, 150);
    });
  });
  
  // Auto-guardar carrito en localStorage
  const cartData = {
    cartId: '{{cartId}}',
    timestamp: new Date().toISOString(),
    products: []
  };
  localStorage.setItem('currentCart', JSON.stringify(cartData));
});
</script>


<script>
function calculateAllSubtotals() {
  const subtotalElements = document.querySelectorAll('.subtotal-value');
  subtotalElements.forEach(element => {
    const price = parseFloat(element.dataset.price) || 0;
    const quantity = parseInt(element.dataset.quantity) || 0;
    const subtotal = (price * quantity).toFixed(2);
    element.textContent = subtotal;
  });
}

// Ejecutar c√°lculos al cargar la p√°gina
document.addEventListener('DOMContentLoaded', function() {
  calculateAllSubtotals();
});
</script>

<!-- Estilos CSS profesionales -->
<style>
.cart-item {
  transition: all 0.3s ease;
  border-radius: 8px;
}

.cart-item:hover {
  box-shadow: 0 4px 15px rgba(0,0,0,0.1);
}

.product-image-container {
  transition: transform 0.2s ease;
}

.product-image-container:hover {
  transform: scale(1.05);
}

.quantity-controls .input-group button {
  transition: all 0.2s ease;
}

.quantity-controls .input-group button:hover {
  transform: scale(1.1);
}

.sticky-top {
  transition: all 0.3s ease;
}

.order-summary {
  font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
}

.benefits .benefit-item {
  transition: transform 0.2s ease;
}

.benefits .benefit-item:hover {
  transform: translateX(5px);
}

.action-buttons button {
  transition: all 0.2s ease;
}

.action-buttons button:hover {
  transform: translateY(-2px);
  box-shadow: 0 4px 8px rgba(0,0,0,0.2);
}

.recommendation-item {
  transition: all 0.2s ease;
  padding: 0.5rem;
  border-radius: 8px;
}

.recommendation-item:hover {
  background-color: #f8f9fa;
  transform: translateX(5px);
}

.empty-cart-icon {
  animation: float 3s ease-in-out infinite;
}

@keyframes float {
  0%, 100% { transform: translateY(0px); }
  50% { transform: translateY(-10px); }
}

.bg-gradient {
  background: linear-gradient(135deg, #28a745 0%, #20c997 100%) !important;
}

.form-control:focus {
  border-color: #20c997;
  box-shadow: 0 0 0 0.2rem rgba(32, 201, 151, 0.25);
}

.btn-success {
  background: linear-gradient(135deg, #28a745 0%, #20c997 100%);
  border: none;
}

.btn-primary {
  background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
  border: none;
}

@media (max-width: 768px) {
  .col-md-2 {
    margin-bottom: 1rem;
  }
  
  .quantity-controls, .subtotal-section {
    text-align: left !important;
    margin-top: 1rem;
  }
  
  .sticky-top {
    position: relative !important;
    top: auto !important;
  }
}

/* Animaciones para interacciones */
@keyframes pulse {
  0% { transform: scale(1); }
  50% { transform: scale(1.05); }
  100% { transform: scale(1); }
}

.btn:active {
  animation: pulse 0.3s ease;
}

/* Loading spinner personalizado */
.spinner-border {
  width: 3rem;
  height: 3rem;
  border-width: 0.3em;
}
</style>

<!-- Bootstrap Icons -->
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.3/font/bootstrap-icons.min.css">
