<div class="container-fluid py-4">
  <!-- Header del cat√°logo -->
  <div class="row mb-4">
    <div class="col-12">
      <div class="d-flex justify-content-between align-items-center">
        <div>
          <h1 class="h3 mb-1">üõçÔ∏è Cat√°logo de Productos</h1>
          <p class="text-muted mb-0">Mostrando <span id="product-count">{{products.length}}</span> productos disponibles</p>
        </div>
        <div class="d-flex gap-2">
          <!-- Barra de b√∫squeda -->
          <div class="input-group" style="width: 300px;">
            <input type="text" class="form-control" id="searchInput" placeholder="Buscar productos...">
            <button class="btn btn-outline-secondary" type="button" onclick="searchProducts(document.getElementById('searchInput').value)">
              <i class="bi bi-search"></i>
            </button>
          </div>
          
          <!-- Filtro por categor√≠a -->
          <div class="dropdown">
            <button class="btn btn-outline-secondary dropdown-toggle" type="button" id="categoryFilter" onclick="toggleDropdown()" aria-expanded="false">
              <i class="bi bi-funnel"></i> <span id="current-category">Todas las categor√≠as</span>
            </button>
            <ul class="dropdown-menu" id="category-list">
              <li><a class="dropdown-item" href="#" onclick="filterByCategory('all'); return false;">Todas las categor√≠as</a></li>
              <!-- Las categor√≠as se llenar√°n din√°micamente -->
            </ul>
          </div>
          
          <div class="btn-group" role="group">
            <a href="/products" class="btn btn-primary">
              <i class="bi bi-cart-plus"></i> Ir de Compras
            </a>
            <a href="/realtimeproducts" class="btn btn-outline-primary">
              <i class="bi bi-tools"></i> Administrar
            </a>
            <a href="/cart/687dac974264b0fa9e14dba6" class="btn btn-success">
              <i class="bi bi-bag"></i> Mi Carrito
            </a>
          </div>
        </div>
      </div>
    </div>
  </div>

  <!-- Lista de productos -->
  <div class="row">
    <div class="col-12">
      <div class="card shadow-sm border-0">
        <div class="card-header bg-light">
          <div class="d-flex justify-content-between align-items-center">
            <h5 class="mb-0">
              <i class="bi bi-grid"></i> Productos Disponibles
            </h5>
            <span class="badge bg-primary fs-6">{{products.length}} productos</span>
          </div>
        </div>
        <div class="card-body p-0">
          <div id="product-list" class="list-group list-group-flush">
            {{#each products}}
            <div class="list-group-item border-0" data-product-id="{{this.id}}">
              <div class="row align-items-center py-2">
                <!-- Informaci√≥n b√°sica -->
                <div class="col-md-5">
                  <div class="d-flex align-items-center">
                    <div class="product-icon me-3">
                      <div class="bg-primary rounded-circle d-flex align-items-center justify-content-center" 
                           style="width: 50px; height: 50px;">
                        <i class="bi bi-box text-white fs-5"></i>
                      </div>
                    </div>
                    <div>
                      <h6 class="mb-1 fw-bold">{{this.title}}</h6>
                      <p class="mb-1 text-muted small">{{this.description}}</p>
                      <div class="meta-info">
                        <span class="badge bg-light text-dark border me-1">
                          <i class="bi bi-upc-scan"></i> {{this.code}}
                        </span>
                        <span class="badge bg-info text-white">
                          <i class="bi bi-tag"></i> {{this.category}}
                        </span>
                      </div>
                    </div>
                  </div>
                </div>
                
                <!-- Precio -->
                <div class="col-md-2 text-center">
                  <div class="price-display">
                    <div class="fs-4 fw-bold text-success">${{this.price}}</div>
                    <small class="text-muted">Precio unitario</small>
                  </div>
                </div>
                
                <!-- Stock -->
                <div class="col-md-2 text-center">
                  {{#if (gt this.stock 20)}}
                    <span class="badge bg-success p-2">
                      <i class="bi bi-check-circle"></i> {{this.stock}} unidades
                    </span>
                  {{else if (gt this.stock 5)}}
                    <span class="badge bg-warning text-dark p-2">
                      <i class="bi bi-exclamation-triangle"></i> {{this.stock}} unidades
                    </span>
                  {{else if (gt this.stock 0)}}
                    <span class="badge bg-danger p-2">
                      <i class="bi bi-exclamation-circle"></i> {{this.stock}} unidades
                    </span>
                  {{else}}
                    <span class="badge bg-secondary p-2">
                      <i class="bi bi-x-circle"></i> Sin stock
                    </span>
                  {{/if}}
                </div>
                
                <!-- Estado y acciones -->
                <div class="col-md-3">
                  <div class="d-flex justify-content-between align-items-center">
                    <div class="product-status">
                      {{#if this.status}}
                        <span class="badge bg-success">
                          <i class="bi bi-check-circle"></i> Disponible
                        </span>
                      {{else}}
                        <span class="badge bg-danger">
                          <i class="bi bi-pause-circle"></i> No disponible
                        </span>
                      {{/if}}
                    </div>
                    <div class="action-buttons">
                      <a href="/products/{{this.id}}" class="btn btn-outline-info btn-sm me-1">
                        <i class="bi bi-eye"></i> Ver
                      </a>
                      <button onclick="addToCart('{{this.id}}')" class="btn btn-success btn-sm">
                        <i class="bi bi-cart-plus"></i> Agregar
                      </button>
                    </div>
                  </div>
                </div>
              </div>
            </div>
            {{/each}}
          </div>
        </div>
      </div>
    </div>
  </div>
</div>

<!-- Estilos adicionales -->
<style>
.list-group-item {
  transition: all 0.2s ease;
}

.list-group-item:hover {
  background-color: #f8f9fa;
  transform: translateX(3px);
}

.product-icon {
  transition: transform 0.2s ease;
}

.product-icon:hover {
  transform: scale(1.1);
}

.price-display {
  font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
}

.action-buttons button, .action-buttons a {
  transition: all 0.2s ease;
}

.action-buttons button:hover, .action-buttons a:hover {
  transform: scale(1.1);
}

@media (max-width: 768px) {
  .col-md-3, .col-md-2 {
    margin-top: 1rem;
  }
  
  .action-buttons {
    display: flex;
    gap: 0.5rem;
  }
  
  .d-flex.gap-2 {
    flex-direction: column;
    gap: 0.5rem !important;
  }
  
  .btn-group {
    width: 100%;
  }
}

/* Estilos para el dropdown */
.dropdown {
  position: relative;
}

.dropdown-menu {
  max-height: 300px;
  overflow-y: auto;
  position: absolute;
  top: 100%;
  left: 0;
  z-index: 1000;
  display: none;
  min-width: 10rem;
  padding: 0.5rem 0;
  margin: 0.125rem 0 0;
  background-color: #fff;
  border: 1px solid rgba(0, 0, 0, 0.15);
  border-radius: 0.375rem;
  box-shadow: 0 0.5rem 1rem rgba(0, 0, 0, 0.175);
}

.dropdown-menu.show {
  display: block !important;
}

.dropdown-item {
  display: block;
  width: 100%;
  padding: 0.25rem 1rem;
  clear: both;
  font-weight: 400;
  color: #212529;
  text-align: inherit;
  text-decoration: none;
  white-space: nowrap;
  background-color: transparent;
  border: 0;
  cursor: pointer;
}

.dropdown-item:hover {
  background-color: #f8f9fa;
  color: #1e2125;
}

.dropdown-toggle {
  cursor: pointer;
}

.dropdown-toggle::after {
  margin-left: 0.5rem;
  content: "";
  border-top: 0.3em solid;
  border-right: 0.3em solid transparent;
  border-bottom: 0;
  border-left: 0.3em solid transparent;
}
</style>

<script src="/socket.io/socket.io.js"></script>
<script src="/js/socket-client.js"></script>

<!-- Scripts para funcionalidad de filtrado -->
<script>
// Variables globales para filtrado (solo las no duplicadas)
let currentFilter = 'all';

// Funci√≥n simple para alternar dropdown
// Funci√≥n para actualizar el contador de productos
function updateProductCount() {
  const count = filteredProducts.length;
  
  document.getElementById('product-count').textContent = count;
  
  // Actualizar badge en el header
  const headerBadge = document.querySelector('.card-header .badge');
  if (headerBadge) {
    headerBadge.textContent = `${count} productos`;
  }
}

// Funci√≥n para extraer categor√≠as √∫nicas y llenar el dropdown
function populateCategoryDropdown() {
  const categoryDropdown = document.getElementById('category-list');
  const categories = new Set();
  
  // Extraer categor√≠as de todos los productos
  totalProducts.forEach(product => {
    if (product.category) {
      categories.add(product.category);
    }
  });
  
  // Limpiar dropdown actual (excepto "Todas las categor√≠as")
  const existingItems = categoryDropdown.querySelectorAll('li:not(:first-child)');
  existingItems.forEach(item => item.remove());
  
  // Agregar categor√≠as al dropdown
  categories.forEach(category => {
    const li = document.createElement('li');
    li.innerHTML = `<a class="dropdown-item" href="#" onclick="filterByCategory('${category}'); return false;">${category}</a>`;
    categoryDropdown.appendChild(li);
  });
}

// Inicializar cuando la p√°gina carga
document.addEventListener('DOMContentLoaded', function() {
  console.log('Inicializando filtros...');
  
  // Configurar eventos para cerrar dropdown
  document.addEventListener('click', function(e) {
    const dropdownButton = document.getElementById('categoryFilter');
    const dropdownMenu = document.getElementById('category-list');
    
    // Si el click no fue en el bot√≥n o el men√∫, cerrar dropdown
    if (dropdownButton && dropdownMenu && 
        !dropdownButton.contains(e.target) && 
        !dropdownMenu.contains(e.target)) {
      dropdownMenu.classList.remove('show');
    }
  });
  
  // Cerrar dropdown al presionar Escape
  document.addEventListener('keydown', function(e) {
    if (e.key === 'Escape') {
      const dropdownMenu = document.getElementById('category-list');
      if (dropdownMenu) {
        dropdownMenu.classList.remove('show');
      }
    }
  });
  
  populateCategoryDropdown();
  updateProductCount();
  
  // Event listener para b√∫squeda en tiempo real
  const searchInput = document.getElementById('searchInput');
  if (searchInput) {
    searchInput.addEventListener('input', function(e) {
      searchProducts(e.target.value);
    });
  }
});

// Actualizar cuando llegan nuevos productos via Socket.IO
if (typeof socket !== 'undefined') {
  socket.on('updateProducts', function(products) {
    totalProducts = products;
    filteredProducts = products;
    
    // Actualizar categor√≠as y aplicar filtros sin setTimeout
    populateCategoryDropdown();
    // Aplicar filtro actual si no es "all"
    if (currentFilter !== 'all') {
      filterByCategory(currentFilter);
    } else {
      currentPage = 1;
      renderProductsPage();
    }
  });
}
</script>
